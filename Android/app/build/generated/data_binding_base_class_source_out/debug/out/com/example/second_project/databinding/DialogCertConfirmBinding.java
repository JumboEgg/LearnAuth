// Generated by view binder compiler. Do not edit!
package com.example.second_project.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.second_project.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogCertConfirmBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppCompatButton btnCloseCert;

  @NonNull
  public final AppCompatButton btnConfirmCert;

  @NonNull
  public final TextView confirmDescription;

  @NonNull
  public final LinearLayout linearBtn;

  @NonNull
  public final TextView textConfirmCertification;

  private DialogCertConfirmBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppCompatButton btnCloseCert, @NonNull AppCompatButton btnConfirmCert,
      @NonNull TextView confirmDescription, @NonNull LinearLayout linearBtn,
      @NonNull TextView textConfirmCertification) {
    this.rootView = rootView;
    this.btnCloseCert = btnCloseCert;
    this.btnConfirmCert = btnConfirmCert;
    this.confirmDescription = confirmDescription;
    this.linearBtn = linearBtn;
    this.textConfirmCertification = textConfirmCertification;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogCertConfirmBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogCertConfirmBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_cert_confirm, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogCertConfirmBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnCloseCert;
      AppCompatButton btnCloseCert = ViewBindings.findChildViewById(rootView, id);
      if (btnCloseCert == null) {
        break missingId;
      }

      id = R.id.btnConfirmCert;
      AppCompatButton btnConfirmCert = ViewBindings.findChildViewById(rootView, id);
      if (btnConfirmCert == null) {
        break missingId;
      }

      id = R.id.confirmDescription;
      TextView confirmDescription = ViewBindings.findChildViewById(rootView, id);
      if (confirmDescription == null) {
        break missingId;
      }

      id = R.id.linearBtn;
      LinearLayout linearBtn = ViewBindings.findChildViewById(rootView, id);
      if (linearBtn == null) {
        break missingId;
      }

      id = R.id.textConfirmCertification;
      TextView textConfirmCertification = ViewBindings.findChildViewById(rootView, id);
      if (textConfirmCertification == null) {
        break missingId;
      }

      return new DialogCertConfirmBinding((ConstraintLayout) rootView, btnCloseCert, btnConfirmCert,
          confirmDescription, linearBtn, textConfirmCertification);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
