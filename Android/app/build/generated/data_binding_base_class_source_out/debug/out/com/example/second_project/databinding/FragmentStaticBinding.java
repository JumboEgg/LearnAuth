// Generated by view binder compiler. Do not edit!
package com.example.second_project.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.fragment.app.FragmentContainerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.second_project.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentStaticBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView layoutDateStats;

  @NonNull
  public final TextView layoutLectureStats;

  @NonNull
  public final TextView layoutMyStats;

  @NonNull
  public final TextView layoutParticipantsStats;

  @NonNull
  public final LinearLayout staticRoot;

  @NonNull
  public final FragmentContainerView subNavHostFragment;

  @NonNull
  public final TextView tvLectureName;

  private FragmentStaticBinding(@NonNull LinearLayout rootView, @NonNull TextView layoutDateStats,
      @NonNull TextView layoutLectureStats, @NonNull TextView layoutMyStats,
      @NonNull TextView layoutParticipantsStats, @NonNull LinearLayout staticRoot,
      @NonNull FragmentContainerView subNavHostFragment, @NonNull TextView tvLectureName) {
    this.rootView = rootView;
    this.layoutDateStats = layoutDateStats;
    this.layoutLectureStats = layoutLectureStats;
    this.layoutMyStats = layoutMyStats;
    this.layoutParticipantsStats = layoutParticipantsStats;
    this.staticRoot = staticRoot;
    this.subNavHostFragment = subNavHostFragment;
    this.tvLectureName = tvLectureName;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentStaticBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentStaticBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_static, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentStaticBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.layoutDateStats;
      TextView layoutDateStats = ViewBindings.findChildViewById(rootView, id);
      if (layoutDateStats == null) {
        break missingId;
      }

      id = R.id.layoutLectureStats;
      TextView layoutLectureStats = ViewBindings.findChildViewById(rootView, id);
      if (layoutLectureStats == null) {
        break missingId;
      }

      id = R.id.layoutMyStats;
      TextView layoutMyStats = ViewBindings.findChildViewById(rootView, id);
      if (layoutMyStats == null) {
        break missingId;
      }

      id = R.id.layoutParticipantsStats;
      TextView layoutParticipantsStats = ViewBindings.findChildViewById(rootView, id);
      if (layoutParticipantsStats == null) {
        break missingId;
      }

      LinearLayout staticRoot = (LinearLayout) rootView;

      id = R.id.subNavHostFragment;
      FragmentContainerView subNavHostFragment = ViewBindings.findChildViewById(rootView, id);
      if (subNavHostFragment == null) {
        break missingId;
      }

      id = R.id.tvLectureName;
      TextView tvLectureName = ViewBindings.findChildViewById(rootView, id);
      if (tvLectureName == null) {
        break missingId;
      }

      return new FragmentStaticBinding((LinearLayout) rootView, layoutDateStats, layoutLectureStats,
          layoutMyStats, layoutParticipantsStats, staticRoot, subNavHostFragment, tvLectureName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
