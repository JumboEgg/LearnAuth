// Generated by view binder compiler. Do not edit!
package com.example.second_project.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.second_project.R;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemRegisterParticipantsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout delete;

  @NonNull
  public final TextInputLayout editTextNameParticipants;

  @NonNull
  public final TextInputLayout editTextRatioParticipants;

  @NonNull
  public final ConstraintLayout isLecturer;

  private ItemRegisterParticipantsBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout delete, @NonNull TextInputLayout editTextNameParticipants,
      @NonNull TextInputLayout editTextRatioParticipants, @NonNull ConstraintLayout isLecturer) {
    this.rootView = rootView;
    this.delete = delete;
    this.editTextNameParticipants = editTextNameParticipants;
    this.editTextRatioParticipants = editTextRatioParticipants;
    this.isLecturer = isLecturer;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemRegisterParticipantsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemRegisterParticipantsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_register_participants, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemRegisterParticipantsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.delete;
      ConstraintLayout delete = ViewBindings.findChildViewById(rootView, id);
      if (delete == null) {
        break missingId;
      }

      id = R.id.editTextNameParticipants;
      TextInputLayout editTextNameParticipants = ViewBindings.findChildViewById(rootView, id);
      if (editTextNameParticipants == null) {
        break missingId;
      }

      id = R.id.editTextRatioParticipants;
      TextInputLayout editTextRatioParticipants = ViewBindings.findChildViewById(rootView, id);
      if (editTextRatioParticipants == null) {
        break missingId;
      }

      id = R.id.isLecturer;
      ConstraintLayout isLecturer = ViewBindings.findChildViewById(rootView, id);
      if (isLecturer == null) {
        break missingId;
      }

      return new ItemRegisterParticipantsBinding((ConstraintLayout) rootView, delete,
          editTextNameParticipants, editTextRatioParticipants, isLecturer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
