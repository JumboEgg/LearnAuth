// Generated by view binder compiler. Do not edit!
package com.example.second_project.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.second_project.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemLectureBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final ImageView lectureImg;

  @NonNull
  public final TextView lecturePrice;

  @NonNull
  public final RelativeLayout lectureTeacher;

  @NonNull
  public final ImageView lectureTeacherIcon;

  @NonNull
  public final TextView lectureTeacherName;

  @NonNull
  public final TextView lectureTitle;

  @NonNull
  public final ConstraintLayout lectureTitleLayout;

  private ItemLectureBinding(@NonNull CardView rootView, @NonNull ImageView lectureImg,
      @NonNull TextView lecturePrice, @NonNull RelativeLayout lectureTeacher,
      @NonNull ImageView lectureTeacherIcon, @NonNull TextView lectureTeacherName,
      @NonNull TextView lectureTitle, @NonNull ConstraintLayout lectureTitleLayout) {
    this.rootView = rootView;
    this.lectureImg = lectureImg;
    this.lecturePrice = lecturePrice;
    this.lectureTeacher = lectureTeacher;
    this.lectureTeacherIcon = lectureTeacherIcon;
    this.lectureTeacherName = lectureTeacherName;
    this.lectureTitle = lectureTitle;
    this.lectureTitleLayout = lectureTitleLayout;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemLectureBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemLectureBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_lecture, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemLectureBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.lectureImg;
      ImageView lectureImg = ViewBindings.findChildViewById(rootView, id);
      if (lectureImg == null) {
        break missingId;
      }

      id = R.id.lecturePrice;
      TextView lecturePrice = ViewBindings.findChildViewById(rootView, id);
      if (lecturePrice == null) {
        break missingId;
      }

      id = R.id.lectureTeacher;
      RelativeLayout lectureTeacher = ViewBindings.findChildViewById(rootView, id);
      if (lectureTeacher == null) {
        break missingId;
      }

      id = R.id.lectureTeacherIcon;
      ImageView lectureTeacherIcon = ViewBindings.findChildViewById(rootView, id);
      if (lectureTeacherIcon == null) {
        break missingId;
      }

      id = R.id.lectureTeacherName;
      TextView lectureTeacherName = ViewBindings.findChildViewById(rootView, id);
      if (lectureTeacherName == null) {
        break missingId;
      }

      id = R.id.lectureTitle;
      TextView lectureTitle = ViewBindings.findChildViewById(rootView, id);
      if (lectureTitle == null) {
        break missingId;
      }

      id = R.id.lectureTitleLayout;
      ConstraintLayout lectureTitleLayout = ViewBindings.findChildViewById(rootView, id);
      if (lectureTitleLayout == null) {
        break missingId;
      }

      return new ItemLectureBinding((CardView) rootView, lectureImg, lecturePrice, lectureTeacher,
          lectureTeacherIcon, lectureTeacherName, lectureTitle, lectureTitleLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
