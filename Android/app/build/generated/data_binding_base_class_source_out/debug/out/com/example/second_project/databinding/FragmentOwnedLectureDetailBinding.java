// Generated by view binder compiler. Do not edit!
package com.example.second_project.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.second_project.R;
import com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentOwnedLectureDetailBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView declarationBtn;

  @NonNull
  public final ExtendedFloatingActionButton downloadBtn;

  @NonNull
  public final ImageButton lectureDetailBack;

  @NonNull
  public final TextView lectureDetailCategory;

  @NonNull
  public final TextView lectureDetailGoal;

  @NonNull
  public final TextView lectureDetailName;

  @NonNull
  public final TextView lectureDetailTeacher;

  @NonNull
  public final TextView lectureDetailTeacherTitle;

  @NonNull
  public final ImageView lectureDetailThumb;

  @NonNull
  public final LinearLayout lectureNameCategory;

  @NonNull
  public final CardView lectureNameCategoryArea;

  @NonNull
  public final RecyclerView myLectureDetailList;

  @NonNull
  public final CardView ownedCertBtn;

  @NonNull
  public final CardView quizBtn;

  @NonNull
  public final CardView watchBtn;

  private FragmentOwnedLectureDetailBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView declarationBtn, @NonNull ExtendedFloatingActionButton downloadBtn,
      @NonNull ImageButton lectureDetailBack, @NonNull TextView lectureDetailCategory,
      @NonNull TextView lectureDetailGoal, @NonNull TextView lectureDetailName,
      @NonNull TextView lectureDetailTeacher, @NonNull TextView lectureDetailTeacherTitle,
      @NonNull ImageView lectureDetailThumb, @NonNull LinearLayout lectureNameCategory,
      @NonNull CardView lectureNameCategoryArea, @NonNull RecyclerView myLectureDetailList,
      @NonNull CardView ownedCertBtn, @NonNull CardView quizBtn, @NonNull CardView watchBtn) {
    this.rootView = rootView;
    this.declarationBtn = declarationBtn;
    this.downloadBtn = downloadBtn;
    this.lectureDetailBack = lectureDetailBack;
    this.lectureDetailCategory = lectureDetailCategory;
    this.lectureDetailGoal = lectureDetailGoal;
    this.lectureDetailName = lectureDetailName;
    this.lectureDetailTeacher = lectureDetailTeacher;
    this.lectureDetailTeacherTitle = lectureDetailTeacherTitle;
    this.lectureDetailThumb = lectureDetailThumb;
    this.lectureNameCategory = lectureNameCategory;
    this.lectureNameCategoryArea = lectureNameCategoryArea;
    this.myLectureDetailList = myLectureDetailList;
    this.ownedCertBtn = ownedCertBtn;
    this.quizBtn = quizBtn;
    this.watchBtn = watchBtn;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentOwnedLectureDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentOwnedLectureDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_owned_lecture_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentOwnedLectureDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.declarationBtn;
      TextView declarationBtn = ViewBindings.findChildViewById(rootView, id);
      if (declarationBtn == null) {
        break missingId;
      }

      id = R.id.downloadBtn;
      ExtendedFloatingActionButton downloadBtn = ViewBindings.findChildViewById(rootView, id);
      if (downloadBtn == null) {
        break missingId;
      }

      id = R.id.lectureDetailBack;
      ImageButton lectureDetailBack = ViewBindings.findChildViewById(rootView, id);
      if (lectureDetailBack == null) {
        break missingId;
      }

      id = R.id.lectureDetailCategory;
      TextView lectureDetailCategory = ViewBindings.findChildViewById(rootView, id);
      if (lectureDetailCategory == null) {
        break missingId;
      }

      id = R.id.lectureDetailGoal;
      TextView lectureDetailGoal = ViewBindings.findChildViewById(rootView, id);
      if (lectureDetailGoal == null) {
        break missingId;
      }

      id = R.id.lectureDetailName;
      TextView lectureDetailName = ViewBindings.findChildViewById(rootView, id);
      if (lectureDetailName == null) {
        break missingId;
      }

      id = R.id.lectureDetailTeacher;
      TextView lectureDetailTeacher = ViewBindings.findChildViewById(rootView, id);
      if (lectureDetailTeacher == null) {
        break missingId;
      }

      id = R.id.lectureDetailTeacherTitle;
      TextView lectureDetailTeacherTitle = ViewBindings.findChildViewById(rootView, id);
      if (lectureDetailTeacherTitle == null) {
        break missingId;
      }

      id = R.id.lectureDetailThumb;
      ImageView lectureDetailThumb = ViewBindings.findChildViewById(rootView, id);
      if (lectureDetailThumb == null) {
        break missingId;
      }

      id = R.id.lectureNameCategory;
      LinearLayout lectureNameCategory = ViewBindings.findChildViewById(rootView, id);
      if (lectureNameCategory == null) {
        break missingId;
      }

      id = R.id.lectureNameCategoryArea;
      CardView lectureNameCategoryArea = ViewBindings.findChildViewById(rootView, id);
      if (lectureNameCategoryArea == null) {
        break missingId;
      }

      id = R.id.myLectureDetailList;
      RecyclerView myLectureDetailList = ViewBindings.findChildViewById(rootView, id);
      if (myLectureDetailList == null) {
        break missingId;
      }

      id = R.id.ownedCertBtn;
      CardView ownedCertBtn = ViewBindings.findChildViewById(rootView, id);
      if (ownedCertBtn == null) {
        break missingId;
      }

      id = R.id.quizBtn;
      CardView quizBtn = ViewBindings.findChildViewById(rootView, id);
      if (quizBtn == null) {
        break missingId;
      }

      id = R.id.watchBtn;
      CardView watchBtn = ViewBindings.findChildViewById(rootView, id);
      if (watchBtn == null) {
        break missingId;
      }

      return new FragmentOwnedLectureDetailBinding((ConstraintLayout) rootView, declarationBtn,
          downloadBtn, lectureDetailBack, lectureDetailCategory, lectureDetailGoal,
          lectureDetailName, lectureDetailTeacher, lectureDetailTeacherTitle, lectureDetailThumb,
          lectureNameCategory, lectureNameCategoryArea, myLectureDetailList, ownedCertBtn, quizBtn,
          watchBtn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
