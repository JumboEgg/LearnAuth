// Generated by view binder compiler. Do not edit!
package com.example.second_project.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.second_project.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemParticipatedLectureBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView category;

  @NonNull
  public final TextView joinText;

  @NonNull
  public final ImageView lectureImage;

  @NonNull
  public final TextView lectureTitle;

  @NonNull
  public final TextView myName;

  private ItemParticipatedLectureBinding(@NonNull CardView rootView, @NonNull TextView category,
      @NonNull TextView joinText, @NonNull ImageView lectureImage, @NonNull TextView lectureTitle,
      @NonNull TextView myName) {
    this.rootView = rootView;
    this.category = category;
    this.joinText = joinText;
    this.lectureImage = lectureImage;
    this.lectureTitle = lectureTitle;
    this.myName = myName;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemParticipatedLectureBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemParticipatedLectureBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_participated_lecture, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemParticipatedLectureBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.category;
      TextView category = ViewBindings.findChildViewById(rootView, id);
      if (category == null) {
        break missingId;
      }

      id = R.id.joinText;
      TextView joinText = ViewBindings.findChildViewById(rootView, id);
      if (joinText == null) {
        break missingId;
      }

      id = R.id.lectureImage;
      ImageView lectureImage = ViewBindings.findChildViewById(rootView, id);
      if (lectureImage == null) {
        break missingId;
      }

      id = R.id.lectureTitle;
      TextView lectureTitle = ViewBindings.findChildViewById(rootView, id);
      if (lectureTitle == null) {
        break missingId;
      }

      id = R.id.myName;
      TextView myName = ViewBindings.findChildViewById(rootView, id);
      if (myName == null) {
        break missingId;
      }

      return new ItemParticipatedLectureBinding((CardView) rootView, category, joinText,
          lectureImage, lectureTitle, myName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
