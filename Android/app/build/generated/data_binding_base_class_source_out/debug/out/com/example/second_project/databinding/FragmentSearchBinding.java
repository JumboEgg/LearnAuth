// Generated by view binder compiler. Do not edit!
package com.example.second_project.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.second_project.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSearchBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final NestedScrollView categoryLayout;

  @NonNull
  public final RecyclerView categoryRecyclerView;

  @NonNull
  public final ImageView clearBtn;

  @NonNull
  public final RecyclerView lectureList;

  @NonNull
  public final MaterialButton searchBtn;

  @NonNull
  public final ConstraintLayout searchContainer;

  @NonNull
  public final ConstraintLayout searchInputBtn;

  @NonNull
  public final TextInputEditText searchInputText;

  @NonNull
  public final TextView searchTitle;

  private FragmentSearchBinding(@NonNull ConstraintLayout rootView,
      @NonNull NestedScrollView categoryLayout, @NonNull RecyclerView categoryRecyclerView,
      @NonNull ImageView clearBtn, @NonNull RecyclerView lectureList,
      @NonNull MaterialButton searchBtn, @NonNull ConstraintLayout searchContainer,
      @NonNull ConstraintLayout searchInputBtn, @NonNull TextInputEditText searchInputText,
      @NonNull TextView searchTitle) {
    this.rootView = rootView;
    this.categoryLayout = categoryLayout;
    this.categoryRecyclerView = categoryRecyclerView;
    this.clearBtn = clearBtn;
    this.lectureList = lectureList;
    this.searchBtn = searchBtn;
    this.searchContainer = searchContainer;
    this.searchInputBtn = searchInputBtn;
    this.searchInputText = searchInputText;
    this.searchTitle = searchTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSearchBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSearchBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_search, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSearchBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.categoryLayout;
      NestedScrollView categoryLayout = ViewBindings.findChildViewById(rootView, id);
      if (categoryLayout == null) {
        break missingId;
      }

      id = R.id.categoryRecyclerView;
      RecyclerView categoryRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (categoryRecyclerView == null) {
        break missingId;
      }

      id = R.id.clearBtn;
      ImageView clearBtn = ViewBindings.findChildViewById(rootView, id);
      if (clearBtn == null) {
        break missingId;
      }

      id = R.id.lectureList;
      RecyclerView lectureList = ViewBindings.findChildViewById(rootView, id);
      if (lectureList == null) {
        break missingId;
      }

      id = R.id.searchBtn;
      MaterialButton searchBtn = ViewBindings.findChildViewById(rootView, id);
      if (searchBtn == null) {
        break missingId;
      }

      id = R.id.searchContainer;
      ConstraintLayout searchContainer = ViewBindings.findChildViewById(rootView, id);
      if (searchContainer == null) {
        break missingId;
      }

      id = R.id.searchInputBtn;
      ConstraintLayout searchInputBtn = ViewBindings.findChildViewById(rootView, id);
      if (searchInputBtn == null) {
        break missingId;
      }

      id = R.id.searchInputText;
      TextInputEditText searchInputText = ViewBindings.findChildViewById(rootView, id);
      if (searchInputText == null) {
        break missingId;
      }

      id = R.id.searchTitle;
      TextView searchTitle = ViewBindings.findChildViewById(rootView, id);
      if (searchTitle == null) {
        break missingId;
      }

      return new FragmentSearchBinding((ConstraintLayout) rootView, categoryLayout,
          categoryRecyclerView, clearBtn, lectureList, searchBtn, searchContainer, searchInputBtn,
          searchInputText, searchTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
