// Generated by view binder compiler. Do not edit!
package com.example.second_project.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.second_project.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentLectureDetailBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton buyBtn;

  @NonNull
  public final ImageButton lectureDetailBack;

  @NonNull
  public final TextView lectureDetailCategory;

  @NonNull
  public final TextView lectureDetailContent;

  @NonNull
  public final TextView lectureDetailContentTitle;

  @NonNull
  public final TextView lectureDetailGoal;

  @NonNull
  public final RecyclerView lectureDetailList;

  @NonNull
  public final CardView lectureDetailListContainer;

  @NonNull
  public final TextView lectureDetailListCount;

  @NonNull
  public final TextView lectureDetailListTitle;

  @NonNull
  public final TextView lectureDetailName;

  @NonNull
  public final TextView lectureDetailPrice;

  @NonNull
  public final TextView lectureDetailTeacher;

  @NonNull
  public final TextView lectureDetailTeacherTitle;

  @NonNull
  public final ImageView lectureDetailThumb;

  @NonNull
  public final LinearLayout lectureNameCategory;

  @NonNull
  public final CardView lectureNameCategoryArea;

  private FragmentLectureDetailBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton buyBtn, @NonNull ImageButton lectureDetailBack,
      @NonNull TextView lectureDetailCategory, @NonNull TextView lectureDetailContent,
      @NonNull TextView lectureDetailContentTitle, @NonNull TextView lectureDetailGoal,
      @NonNull RecyclerView lectureDetailList, @NonNull CardView lectureDetailListContainer,
      @NonNull TextView lectureDetailListCount, @NonNull TextView lectureDetailListTitle,
      @NonNull TextView lectureDetailName, @NonNull TextView lectureDetailPrice,
      @NonNull TextView lectureDetailTeacher, @NonNull TextView lectureDetailTeacherTitle,
      @NonNull ImageView lectureDetailThumb, @NonNull LinearLayout lectureNameCategory,
      @NonNull CardView lectureNameCategoryArea) {
    this.rootView = rootView;
    this.buyBtn = buyBtn;
    this.lectureDetailBack = lectureDetailBack;
    this.lectureDetailCategory = lectureDetailCategory;
    this.lectureDetailContent = lectureDetailContent;
    this.lectureDetailContentTitle = lectureDetailContentTitle;
    this.lectureDetailGoal = lectureDetailGoal;
    this.lectureDetailList = lectureDetailList;
    this.lectureDetailListContainer = lectureDetailListContainer;
    this.lectureDetailListCount = lectureDetailListCount;
    this.lectureDetailListTitle = lectureDetailListTitle;
    this.lectureDetailName = lectureDetailName;
    this.lectureDetailPrice = lectureDetailPrice;
    this.lectureDetailTeacher = lectureDetailTeacher;
    this.lectureDetailTeacherTitle = lectureDetailTeacherTitle;
    this.lectureDetailThumb = lectureDetailThumb;
    this.lectureNameCategory = lectureNameCategory;
    this.lectureNameCategoryArea = lectureNameCategoryArea;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentLectureDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentLectureDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_lecture_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentLectureDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buyBtn;
      MaterialButton buyBtn = ViewBindings.findChildViewById(rootView, id);
      if (buyBtn == null) {
        break missingId;
      }

      id = R.id.lectureDetailBack;
      ImageButton lectureDetailBack = ViewBindings.findChildViewById(rootView, id);
      if (lectureDetailBack == null) {
        break missingId;
      }

      id = R.id.lectureDetailCategory;
      TextView lectureDetailCategory = ViewBindings.findChildViewById(rootView, id);
      if (lectureDetailCategory == null) {
        break missingId;
      }

      id = R.id.lectureDetailContent;
      TextView lectureDetailContent = ViewBindings.findChildViewById(rootView, id);
      if (lectureDetailContent == null) {
        break missingId;
      }

      id = R.id.lectureDetailContentTitle;
      TextView lectureDetailContentTitle = ViewBindings.findChildViewById(rootView, id);
      if (lectureDetailContentTitle == null) {
        break missingId;
      }

      id = R.id.lectureDetailGoal;
      TextView lectureDetailGoal = ViewBindings.findChildViewById(rootView, id);
      if (lectureDetailGoal == null) {
        break missingId;
      }

      id = R.id.lectureDetailList;
      RecyclerView lectureDetailList = ViewBindings.findChildViewById(rootView, id);
      if (lectureDetailList == null) {
        break missingId;
      }

      id = R.id.lectureDetailListContainer;
      CardView lectureDetailListContainer = ViewBindings.findChildViewById(rootView, id);
      if (lectureDetailListContainer == null) {
        break missingId;
      }

      id = R.id.lectureDetailListCount;
      TextView lectureDetailListCount = ViewBindings.findChildViewById(rootView, id);
      if (lectureDetailListCount == null) {
        break missingId;
      }

      id = R.id.lectureDetailListTitle;
      TextView lectureDetailListTitle = ViewBindings.findChildViewById(rootView, id);
      if (lectureDetailListTitle == null) {
        break missingId;
      }

      id = R.id.lectureDetailName;
      TextView lectureDetailName = ViewBindings.findChildViewById(rootView, id);
      if (lectureDetailName == null) {
        break missingId;
      }

      id = R.id.lectureDetailPrice;
      TextView lectureDetailPrice = ViewBindings.findChildViewById(rootView, id);
      if (lectureDetailPrice == null) {
        break missingId;
      }

      id = R.id.lectureDetailTeacher;
      TextView lectureDetailTeacher = ViewBindings.findChildViewById(rootView, id);
      if (lectureDetailTeacher == null) {
        break missingId;
      }

      id = R.id.lectureDetailTeacherTitle;
      TextView lectureDetailTeacherTitle = ViewBindings.findChildViewById(rootView, id);
      if (lectureDetailTeacherTitle == null) {
        break missingId;
      }

      id = R.id.lectureDetailThumb;
      ImageView lectureDetailThumb = ViewBindings.findChildViewById(rootView, id);
      if (lectureDetailThumb == null) {
        break missingId;
      }

      id = R.id.lectureNameCategory;
      LinearLayout lectureNameCategory = ViewBindings.findChildViewById(rootView, id);
      if (lectureNameCategory == null) {
        break missingId;
      }

      id = R.id.lectureNameCategoryArea;
      CardView lectureNameCategoryArea = ViewBindings.findChildViewById(rootView, id);
      if (lectureNameCategoryArea == null) {
        break missingId;
      }

      return new FragmentLectureDetailBinding((ConstraintLayout) rootView, buyBtn,
          lectureDetailBack, lectureDetailCategory, lectureDetailContent, lectureDetailContentTitle,
          lectureDetailGoal, lectureDetailList, lectureDetailListContainer, lectureDetailListCount,
          lectureDetailListTitle, lectureDetailName, lectureDetailPrice, lectureDetailTeacher,
          lectureDetailTeacherTitle, lectureDetailThumb, lectureNameCategory,
          lectureNameCategoryArea);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
